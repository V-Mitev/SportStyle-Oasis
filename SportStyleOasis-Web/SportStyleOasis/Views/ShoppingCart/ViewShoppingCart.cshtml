@model ShoppingCartViewModel
@inject IUserService UserService;
@inject IShoppingCartService ShoppingCartService;
@{
    var userName = await UserService.GetUserFullNameByIdAsync(User.GetId());

    TempData["Title"] = $"Hello {userName} this is your shopping cart!";
}

<link href="/css/shoppingCart/viewShoppingCart.css" rel="stylesheet" />

<h1 class="text-center">@TempData["Title"]</h1>

<div class="shopping-cart mb-3">
    @foreach (var cloth in Model.Clothes)
    {
        <div class="cart-item">
            <div class="item-image" id="@cloth.Id" style="position: relative;">
                <img src="/images/@cloth.Image" alt="@cloth.Name" onclick="openCloth(@cloth.Id)" onload="checkQuantity(@cloth.Id, @cloth.AvailableQuantity, @cloth.OrderedQuantity)">
            </div>
            <div class="item-details">
                <h3>@cloth.Name</h3>
                <p>Size: @cloth.Size</p>
                <p>Color: @cloth.Color</p>
                <p>Price: $@cloth.Price</p>
                <p>Ordered quantity:</p>
                <div class="quantity-form">
                    <button type="button" id="sub" class="sub" onclick="decreaseQuantity(this, @cloth.ClothInventoryId, 'cloth')">-</button>
                    <input type="number" value="@cloth.OrderedQuantity" class="quantity" oninput="checkValueDebounced(this, @cloth.AvailableQuantity, @cloth.ClothInventoryId, 'cloth')">
                    <button type="button" id="add" class="add" onclick="increaseQuantity(this, @cloth.AvailableQuantity, @cloth.ClothInventoryId, 'cloth')">+</button>
                </div>
                <button class="remove-item-btn cloth" data-cart-id="@Model.Id" data-cloth-id="@cloth.Id" data-cloth-size="@cloth.Size" data-cloth-name="@cloth.Name" onclick="removeClothe(this)">X</button>
            </div>
        </div>
    }

    @foreach (var proteinPowder in Model.ProteinPowders)
    {
        <div class="cart-item">
            <div class="item-image">
                <img src="/images/@proteinPowder.Image" alt="@proteinPowder.Name" onclick="openProtein(@proteinPowder.Id)">
            </div>
            <div class="item-details">
                <h3>@proteinPowder.Name</h3>
                <p>Flavor: @proteinPowder.FlavorName</p>
                <p>Type of protein: @proteinPowder.TypeOfProtein</p>
                <p>Brand: @proteinPowder.ProteinPowderBrand</p>
                <p>Weight: @proteinPowder.Weight grams.</p>
                <p>Price: $@proteinPowder.Price</p>
                <p>Ordered quantity:</p>
                <div class="quantity-form">
                    <button type="button" id="sub" class="sub" onclick="decreaseQuantity(this, @proteinPowder.ProteinOrderedQuantityId, 'protein')">-</button>
                    <input type="number" value="@proteinPowder.OrderedQuantity" class="quantity" oninput="checkValueDebounced(this, @proteinPowder.AvailableQuantity, @proteinPowder.ProteinOrderedQuantityId, 'protein')">
                    <button type="button" id="add" class="add" onclick="increaseQuantity(this ,@proteinPowder.AvailableQuantity, @proteinPowder.ProteinOrderedQuantityId, 'protein')">+</button>
                </div>
                <button class="remove-item-btn protein" data-cart-id="@Model.Id" data-protein-id="@proteinPowder.Id" data-protein-flavor="@proteinPowder.FlavorName" data-protein-name="@proteinPowder.Name" onclick="removeProtein(this)">X</button>
            </div>
        </div>
    }
</div>
<div>
    <h2>@Model.Total</h2>
</div>
@if (Model.Clothes.Any() || Model.ProteinPowders.Any())
{
    <form asp-controller="ShoppingCart" asp-action="FinishOrder">
        <input type="hidden" name="shoppingCartId" value="@Model.Id" />

        <input type="submit" class="btn btn-primary" value="Finish order" id="finishOrderBtn" />
    </form>
}

<script src="/js/shoppingCart/viewShoppingCart.js"></script>
<script src="/js/clothe/all.js"></script>
<script src="/js/proteinPowder/all.js"></script>