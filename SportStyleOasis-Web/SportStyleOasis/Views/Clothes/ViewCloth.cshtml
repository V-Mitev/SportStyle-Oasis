@using SportStyleOasis.Web.ViewModels.ClothInventory
@model ClothReviewViewModel
@inject IUserService UserService
@inject IReviewService ReviewService
@inject IClothesService ClothService
@using static SportStyleOasis.Web.Infrastructure.Extensions.ClaimsPrincipalExtensions

@{
    var userId = User.GetId();
    var isUserAdmin = User.IsAdmin();
    var isAuthenticated = User?.Identity?.IsAuthenticated ?? false;
    var clothId = Model.Cloth.Id;
    var availableClothes = await ClothService.GetAvailableColorsForClothAsync(Model.Cloth.Name);
}

<style>
    .space {
        margin-left: 15px;
    }

    .btn {
        vertical-align: baseline;
    }

    .color-option {
        display: inline-block;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        margin-right: 5px;
        cursor: pointer;
    }

    .selected {
        border: 2px solid black;
    }
</style>

<h1 class="text-center">@Model.Cloth.Name</h1>

<div>
    <img src="~/images/@Model.Cloth.Image" alt="@Model.Cloth.Name Image">
</div>

<div>
    <p><strong>Price:</strong> $@Model.Cloth.Price</p>
    <p><strong>Description:</strong> @Model.Cloth.Description</p>
    <p><strong>Clothe Brand:</strong> @Model.Cloth.ClothBrand</p>
    <p><strong>Gender:</strong> @Model.Cloth.ClothForGender</p>
    <p><strong>Type of Clothes:</strong> @Model.Cloth.ClothType</p>

    <input type="hidden" id="selected-color" value="@Model.Cloth.Color" />

    <form id="form" asp-controller="ShoppingCart" asp-action="AddClotheToCart" method="post">
        <p><strong>Available Cloth Colors:</strong></p>
        <div id="color-options">
            <span class="color-option selected" style="background-color: @Model.Cloth.Color" data-cloth-id="@Model.Cloth.Id"></span>

            @foreach (var cloth in availableClothes)
            {
                if (Model.Cloth.Color == cloth.Color)
                {
                    continue;
                }

                <span class="color-option" style="background-color: @cloth.Color" data-cloth-id="@cloth.Id"></span>
            }
        </div>

        <p><strong>Available Clothe Size:</strong></p>

        <select class="form-control mb-2" id="garmentSize" name="GarmentSize" required>
            <option value="" selected>Please select cloth size</option>
            @foreach (var clothInventory in Model.Cloth.ClothInventory)
            {
                @if (clothInventory.AvailableQuantity > 0)
                {
                    <option value="@($"{clothInventory.ClothesSize}|{clothInventory.AvailableQuantity}")">@clothInventory.ClothesSize</option>
                }
            }
        </select>

        <input type="hidden" id="clothSize" value="" />

        @if (isAuthenticated)
        {
            <input type="number" class="form-control mb-2" id="quantity" min="1" value="1" step="1" required>
            <button type="button" class="btn btn-primary mb-2" onclick="addToCart(@clothId)">Add to cart</button>
        }
    </form>
    <p><strong>Ratings:</strong></p>
    @if (Model.Cloth.Reviews != null && Model.Cloth.Reviews.Any())
    {
        <ul>
            @foreach (var review in Model.Cloth.Reviews)
            {
                <li>
                    <div class="comment-content" data-review-id="@review.Id" data-initial-comment="@review.Comment" data-initial-rating="@review.Rating">
                        <span>
                            Rating: <span class="rating">@review.Rating</span>,
                            @if (review.Comment != null)
                            {
                                <span>Comment: <span class="comment">@review.Comment,</span></span>
                            }
                            CreateAt: @review.CreatedAt, User: @review.UserName
                        </span>
                        @if (await UserService.IsThisUserPostThisReview(userId, review.Id, isUserAdmin))
                        {
                            <button class="edit-btn btn btn-primary mb-2">Edit</button>
                            <button class="btn btn-danger space delete-btn" data-review-id="@review.Id">Delete</button>
                        }
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No ratings yet.</p>
    }

    @if (!await ReviewService.IsUserAddReviewToClotheAsync(userId, Model.Cloth.Id) && isAuthenticated)
    {
        <form asp-controller="Review" asp-action="AddClotheReview" method="post">
            <input type="hidden" name="clothId" value="@Model.Cloth.Id" />

            <label asp-for="Review.Rating">Rating:</label>
            <select asp-for="Review.Rating" asp-items="new SelectList(new List<int> { 1, 2, 3, 4, 5 })" class="form-control" required>
                <option value="">Select Rating</option>
            </select>
            <span asp-validation-for="Review.Rating" class="text-danger"></span>

            <label asp-for="Review.Comment">Comment:</label>
            <textarea asp-for="Review.Comment" class="form-control mb-2"></textarea>
            <span asp-validation-for="Review.Comment" class="text-danger"></span>

            <input type="submit" value="Submit Rating" class="btn btn-primary mb-2" />
        </form>
    }
</div>

@if (isUserAdmin)
{
    <div class="d-flex align-items-center">
        <a asp-controller="Clothes" asp-action="Edit" asp-route-id="@Model.Cloth.Id" class="btn btn-warning">Edit</a>
        <form asp-controller="Clothes" asp-action="Delete" method="post" asp-route-id="@Model.Cloth.Id">
            <input type="submit" value="Delete" class="btn btn-danger space" onclick="return confirm('Are you sure you want to delete this garment: @Model.Cloth.Name')" />
        </form>
        <a asp-controller="ClothInventory" asp-action="Edit" asp-route-id="@clothId" class="btn btn-primary space">Edit cloth inventory</a>
    </div>
}

@section scripts {
    <script>
        $(document).ready(function () {
            function setupEditForm(reviewContainer) {
                var reviewId = reviewContainer.data("review-id");
                var initialComment = reviewContainer.data("initial-comment");
                var initialRating = reviewContainer.data("initial-rating");

                var editForm = `
                                                                                                                                                                                                                    <form class="edit-form" data-review-id="${reviewId}">
                                                                                                                                                                                                                        <label>Edit Comment:</label>
                                                                                                                                                                                                                        <input type="text" class="form-control mb-2" value="${initialComment}" name="editedComment"/>
                                                                                                                                                                                                                        <label>Edit Rating:</label>
                                                                                                                                                                                                                        <select class="form-control mb-2" name="editedRating" required>
                                                                                                                                                                                                                            <option value="1">1</option>
                                                                                                                                                                                                                            <option value="2">2</option>
                                                                                                                                                                                                                            <option value="3">3</option>
                                                                                                                                                                                                                            <option value="4">4</option>
                                                                                                                                                                                                                            <option value="5">5</option>
                                                                                                                                                                                                                        </select>
                                                                                                                                                                                                                        <button type="button" class="btn btn-primary save-btn">Save</button>
                                                                                                                                                                                                                    </form>`;

                var editFormContainer = $('<div>').html(editForm);
                reviewContainer.html('').append(editFormContainer);
                editFormContainer.find("[name='editedComment']").val(initialComment);
                editFormContainer.find("[name='editedRating']").val(initialRating);
            }

            // Delegate event listeners to document
            $(document).on("click", ".edit-btn", function () {
                var reviewContainer = $(this).closest(".comment-content");
                setupEditForm(reviewContainer);
            });

            $(document).on("click", ".save-btn", function () {
                var reviewContainer = $(this).closest(".comment-content");
                var reviewId = reviewContainer.data("review-id");
                var editedComment = reviewContainer.find("[name='editedComment']").val();
                var editedRating = reviewContainer.find("[name='editedRating']").val();

                reviewContainer.data("initial-comment", editedComment);
                reviewContainer.data("initial-rating", editedRating);

                $.ajax({
                    type: 'POST',
                    url: '/Review/EditReview',
                    data: { reviewId, editedComment, editedRating },
                    success: function (response) {
                        var formattedCreatedAt = new Date(response.createdAt).toLocaleDateString('en-US');
                        var editButton = `<button class="edit-btn btn btn-primary">Edit</button>`;
                        var deleteButton = `<button class="btn btn-danger space delete-btn" data-review-id="${reviewId}">Delete</button>`;
                        var updatedContent = `Rating: ${response.rating}, `;

                        if (response.comment === null) {
                            updatedContent += `CreatedAt: ${formattedCreatedAt}, User: ${response.userName} ${editButton} ${deleteButton}`;
                        } else {
                            updatedContent += `Comment: ${response.comment}, CreatedAt: ${formattedCreatedAt}, User: ${response.userName} ${editButton} ${deleteButton}`;
                        }

                        reviewContainer.find('.edit-form').remove();
                        reviewContainer.append(updatedContent);
                    },
                    error: function (error) {
                        console.error('Error updating comment:', error);
                    }
                });
            });

            $(document).on("click", ".delete-btn", function () {
                var reviewId = $(this).data("review-id");
                confirmDelete(reviewId);
            });

            function confirmDelete(reviewId) {
                const url = '/Review/DeleteReview';

                if (confirm('Are you sure you want to delete this review')) {
                    $.ajax({
                        url: url,
                        type: 'POST',
                        data: { reviewId },
                        success: function (result) {
                            location.reload();
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                }
            }
        });

        function setClothSize() {
            var selectedOption = document.getElementById('garmentSize').value;
            document.getElementById('clothSize').value = selectedOption;
        }

        function addToCart(clothId) {
            var form = document.getElementById('form');

            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            setClothSize();
            var sizeAndQuantity = document.getElementById('clothSize').value.split('|');
            var size = sizeAndQuantity[0];
            var quantity = document.getElementById('quantity').value;
            var availableQuantity = parseInt(sizeAndQuantity[1]);

            if (quantity > availableQuantity) {
                alert(`Quantity exceeds available quantity (${availableQuantity}). Please select a lower quantity.`);
                return;
            }

            $.ajax({
                url: '/ShoppingCart/AddClotheToCart',
                type: 'POST',
                data: { clothId, size, quantity },
                success: function (response) {
                    window.location.reload();
                },
                error: function (error) {
                    alert("An error occurred while adding clothes to the cart. Please try again later.");
                }
            });
        }

        $(".color-option").click(function () {
            $(".color-option").removeClass("selected");
            $(this).addClass("selected");

            var selectedColor = $(this).css("background-color");
            $("#selected-color").val(rgbToName(selectedColor));

            var clothId = $(this).data("cloth-id");

            var url = '/Clothes/ViewCloth/' + clothId;

            window.location.href = url;
        });

        function rgbToName(rgb) {
            var colorNames = {
                "rgb(255, 0, 0)": "red",
                "rgb(0, 255, 0)": "green",
                "rgb(0, 0, 255)": "blue",
                "rgb(128, 128, 128)": "gray",
                "rgb(0, 0, 0)": "dark",
                "rgb(255, 255, 255)": "white"
            };
            return colorNames[rgb] || rgb;
        }
    </script>
}
