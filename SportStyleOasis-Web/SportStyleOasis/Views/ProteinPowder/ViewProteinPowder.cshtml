@model ProteinPowderReviewViewModel
@inject IUserService UserService
@inject IReviewService ReviewService
@using static SportStyleOasis.Web.Infrastructure.Extensions.ClaimsPrincipalExtensions;

@{
    var userId = User.GetId();
    var isUserAdmin = User.IsAdmin();
    var isAuthenticated = User?.Identity?.IsAuthenticated ?? false;
    var proteinId = Model.ProteinPowder.Id;
}

<link href="/css/proteinPowder/viewProteinPowder.css" rel="stylesheet" />

<h1 class="text-center">@Model.ProteinPowder.Name</h1>

<div>
    <img src="~/images/@Model.ProteinPowder.Image" alt="@Model.ProteinPowder.Name Image">
</div>

<div>
    <p><strong>Price:</strong> $@Model.ProteinPowder.Price</p>
    <p><strong>Description:</strong> @Model.ProteinPowder.Description</p>
    <p><strong>Protein Powder Brand:</strong> @Model.ProteinPowder.ProteinPowderBrand</p>
    <p><strong>Weight in grams:</strong> @Model.ProteinPowder.Weight</p>
    <p><strong>Protein Type:</strong> @Model.ProteinPowder.TypeOfProtein</p>
    <p><strong>Availabe Protein Powder Flavors:</strong></p>

    <form id="form" asp-controller="ShoppingCart" asp-action="AddProteinToCart" method="post">
        <select class="form-control mb-2" id="proteinFlavors" required>
            <option value="" selected>Please select protein flavor</option>

            @foreach (var proteinPowderFlavor in Model.ProteinPowder.ProteinFlavors)
            {
                if (proteinPowderFlavor.Quantity > 0)
                {
                    <option value="@($"{proteinPowderFlavor.FlavorName}|{proteinPowderFlavor.Quantity}")">@proteinPowderFlavor.FlavorName</option>
                }
            }
        </select>

        <input type="hidden" id="proteinFlavor" value="" />

        @if (isAuthenticated)
        {
            <input type="number" class="form-control mb-2" id="quantity" min="1" value="1" step="1" required>
            <button type="button" class="btn btn-primary mb-2" onclick="addToCart(@proteinId)">Add to cart</button>
        }
    </form>
</div>
<div class="review">
    @if (!await ReviewService.IsUserAddReviewToProteinPowderAsync(userId, proteinId) && isAuthenticated)
    {
        <form asp-controller="Review" asp-action="AddProteinPowderReview" method="post" class="form">
            <input type="hidden" name="proteinPowderId" value="@proteinId" />

            <strong><p>Add a review</p></strong>

            <label asp-for="Review.Rating">Rating:</label>
            <select asp-for="Review.Rating" asp-items="new SelectList(new List<int> { 1, 2, 3, 4, 5 })" class="form-control rating" id="raiting" required>
                <option value="">Select Rating</option>
            </select>
            <span asp-validation-for="Review.Rating" class="text-danger"></span>

            <label asp-for="Review.Comment">Comment:</label>
            <textarea asp-for="Review.Comment" class="form-control mb-2 comment"></textarea>
            <span asp-validation-for="Review.Comment" class="text-danger"></span>

            <input type="submit" value="Submit Rating" class="btn btn-primary mb-2" />
        </form>
    }

    <p><strong>Reviews:</strong></p>
    @if (Model.ProteinPowder.Reviews != null && Model.ProteinPowder.Reviews.Any())
    {
        <ul>
            @foreach (var review in Model.ProteinPowder.Reviews)
            {
                <li class="review list item">
                    <div class="full-review" data-review-id="@review.Id" data-initial-comment="@review.Comment" data-initial-rating="@review.Rating">
                        <div class="review">
                            <div class="review-content">
                                <p class="username">@review.UserName</p>
                                <div class="user-data">
                                    <p class="rating">
                                        @for (int i = 0; i < review.Rating; i++)
                                        {
                                            <span class="star">★</span>
                                        }
                                    </p>
                                    <p class="createdAt">@review.CreatedAt.ToString("MMMM dd, yyyy")</p>
                                </div>
                                <p class="comment">
                                    @review.Comment
                                    <span class="buttons-container">
                                        @if (await UserService.IsThisUserPostThisReview(userId, review.Id, isUserAdmin))
                                        {
                                            <button class="btn edit-btn" onclick="editBtnClickHandler(this)"><i class="fa-solid fa-pencil"></i></button>
                                            <button class="btn delete-btn" data-review-id="@review.Id" onclick="deleteBtnClickHandler(this)">X</button>
                                        }
                                    </span>
                                </p>
                            </div>
                        </div>
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p>There are no reviews yet.</p>
    }
</div>

@if (isUserAdmin)
{
    <div class="d-flex align-items-center">
        <a asp-controller="ProteinPowder" asp-action="Edit" asp-route-id="@proteinId" class="btn btn-warning">Edit</a>

        <button class="btn btn-danger space" onclick="deleteProteinPowder(`@proteinId`, `@Model.ProteinPowder.Name`)">Delete</button>

        <a asp-controller="Flavor" asp-action="Add" asp-route-id="@proteinId" class="btn btn-primary space">Add flavor</a>

        <a asp-controller="Flavor" asp-action="EditProteinFlavors" asp-route-proteinPowderId="@proteinId" class="btn btn-primary space">Edit Flavors</a>
    </div>
}

@section scripts {
    <script src="/js/proteinPowder/viewProteinPowder.js"></script>
}
