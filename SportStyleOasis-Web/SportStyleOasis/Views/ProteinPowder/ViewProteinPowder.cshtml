@model ProteinPowderReviewViewModel
@inject IUserService UserService
@inject IReviewService ReviewService
@using static SportStyleOasis.Web.Infrastructure.Extensions.ClaimsPrincipalExtensions;

@{
    var userId = User.GetId();
}

<style>
    .space {
        margin-left: 15px;
    }
</style>

<h1 class="text-center">@Model.ProteinPowder.Name</h1>

<div>
    <img src="~/images/@Model.ProteinPowder.Image" alt="@Model.ProteinPowder.Name Image">
</div>

<div>
    <p><strong>Price:</strong> $@Model.ProteinPowder.Price</p>
    <p><strong>Description:</strong> @Model.ProteinPowder.Description</p>
    <p><strong>Protein Powder Brand:</strong> @Model.ProteinPowder.ProteinPowderBrand</p>
    <p><strong>Weight in grams:</strong> @Model.ProteinPowder.Weight</p>
    <p><strong>Protein Type:</strong> @Model.ProteinPowder.TypeOfProtein</p>
    <p><strong>Availabe Protein Powder Flavors:</strong></p>
    <select class="form-control mb-2" id="proteinFlavors" name="ProteinFlavors" required>
        @foreach (var proteinPowderFlavor in Model.ProteinPowder.ProteinFlavors)
        {
            <option value="@proteinPowderFlavor.FlavorName">@proteinPowderFlavor.FlavorName</option>
        }
    </select>

    <p><strong>Ratings:</strong></p>
    @if (Model.ProteinPowder.Reviews != null && Model.ProteinPowder.Reviews.Any())
    {
        <ul>
            @foreach (var review in Model.ProteinPowder.Reviews)
            {
                <li>
                    <div class="comment-content" data-review-id="@review.Id" data-initial-comment="@review.Comment" data-initial-rating="@review.Rating">
                        <span>
                            Rating: <span class="rating">@review.Rating</span>,
                            @if (review.Comment != null)
                            {
                                <span>Comment: <span class="comment">@review.Comment,</span></span>
                            }
                            CreateAt: @review.CreatedAt, UserName: @review.UserName
                        </span>
                        @if (await UserService.IsThisUserPostThisReview(userId, review.Id))
                        {
                            <button class="edit-btn btn btn-primary mb-2">Edit</button>
                        }
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No ratings yet.</p>
    }

    @if (!await ReviewService.IsUserAddReviewToProteinPowder(userId, Model.ProteinPowder.Id))
    {
        <form asp-controller="Review" asp-action="AddProteinPowderReview" method="post">
            <input type="hidden" name="proteinPowderId" value="@Model.ProteinPowder.Id" />

            <label asp-for="Review.Rating">Rating:</label>
            <select asp-for="Review.Rating" asp-items="new SelectList(new List<int> { 1, 2, 3, 4, 5 })" class="form-control" required>
                <option value="">Select Rating</option>
            </select>
            <span asp-validation-for="Review.Rating" class="text-danger"></span>

            <label asp-for="Review.Comment">Comment:</label>
            <textarea asp-for="Review.Comment" class="form-control mb-2"></textarea>
            <span asp-validation-for="Review.Comment" class="text-danger"></span>

            <input type="submit" value="Submit Rating" class="btn btn-primary mb-2" />
        </form>
    }
</div>

@if (User.IsAdmin())
{
    <div class="d-flex align-items-center">
        <a asp-controller="ProteinPowder" asp-action="Edit" asp-route-id="@Model.ProteinPowder.Id" class="btn btn-warning">Edit</a>
        <form asp-controller="ProteinPowder" asp-action="Delete" asp-route-id="@Model.ProteinPowder.Id">
            <input type="submit" value="Delete" class="btn btn-danger space" onclick="return confirm('Are you sure you want to delete this Protein Powder: @Model.ProteinPowder.Name')" />
        </form>
        <a asp-controller="Flavor" asp-action="Add" asp-route-id="@Model.ProteinPowder.Id" class="btn btn-primary space">Add flavor</a>
    </div>
}

@section scripts {
    <script>
        $(document).ready(function () {
            function setupEditForm(reviewContainer) {
                var reviewId = reviewContainer.data("review-id");
                var initialComment = reviewContainer.data("initial-comment");
                var initialRating = reviewContainer.data("initial-rating");

                var editForm = `
                                                                    <form class="edit-form" data-review-id="${reviewId}">
                                                                        <label>Edit Comment:</label>
                                                                        <input type="text" class="form-control mb-2" value="${initialComment}" name="editedComment"/>

                                                                        <label>Edit Rating:</label>
                                                                        <select class="form-control mb-2" name="editedRating" required>
                                                                            <option value="1">1</option>
                                                                            <option value="2">2</option>
                                                                            <option value="3">3</option>
                                                                            <option value="4">4</option>
                                                                            <option value="5">5</option>
                                                                        </select>

                                                                        <button type="button" class="btn btn-primary save-btn">Save</button>
                                                                    </form>`;

                var editFormContainer = $('<div>').html(editForm);
                reviewContainer.html('').append(editFormContainer);
                editFormContainer.find("[name='editedComment']").val(initialComment);
                editFormContainer.find("[name='editedRating']").val(initialRating);
            }

            function attachEventListeners() {
                $(document).off("click", ".edit-btn").on("click", ".edit-btn", function () {
                    var reviewContainer = $(this).closest(".comment-content");
                    setupEditForm(reviewContainer);
                });

                $(document).off("click", ".save-btn").on("click", ".save-btn", function () {
                    var reviewContainer = $(this).closest(".comment-content");
                    var reviewId = reviewContainer.data("review-id");
                    var editedComment = reviewContainer.find("[name='editedComment']").val();
                    var editedRating = reviewContainer.find("[name='editedRating']").val();

                    reviewContainer.data("initial-comment", editedComment);
                    reviewContainer.data("initial-rating", editedRating);

                    $.ajax({
                        type: 'POST',
                        url: '/Review/EditReview',
                        data: { reviewId, editedComment, editedRating },
                        success: function (response) {
                            var formattedCreatedAt = new Date(response.createdAt).toLocaleDateString('en-US');
                            var editButton = `<button class="edit-btn btn btn-primary">Edit</button>`;

                            var updatedContent = `Rating: ${response.rating}, `;

                            if (response.comment === null) {
                                updatedContent += `CreatedAt: ${formattedCreatedAt}, User: ${response.userName} ${editButton}`;
                            } else {
                                updatedContent += `Comment: ${response.comment}, CreatedAt: ${formattedCreatedAt}, User: ${response.userName} ${editButton}`;
                            }

                            reviewContainer.find('.edit-form').remove();
                            reviewContainer.append(updatedContent);
                            attachEventListeners();
                        },
                        error: function (error) {
                            console.error('Error updating comment:', error);
                        }
                    });
                });
            }

            attachEventListeners();
        });
    </script>
    }