@model ProteinPowderReviewViewModel
@inject IUserService UserService
@inject IReviewService ReviewService
@using static SportStyleOasis.Web.Infrastructure.Extensions.ClaimsPrincipalExtensions;

@{
    var userId = User.GetId();
    var isUserAdmin = User.IsAdmin();
    var isAuthenticated = User?.Identity?.IsAuthenticated ?? false;
    var proteinId = Model.ProteinPowder.Id;
}

<style>
    .space {
        margin-left: 15px;
    }

    .btn {
        vertical-align: baseline;
    }

</style>

<h1 class="text-center">@Model.ProteinPowder.Name</h1>

<div>
    <img src="~/images/@Model.ProteinPowder.Image" alt="@Model.ProteinPowder.Name Image">
</div>

<div>
    <p><strong>Price:</strong> $@Model.ProteinPowder.Price</p>
    <p><strong>Description:</strong> @Model.ProteinPowder.Description</p>
    <p><strong>Protein Powder Brand:</strong> @Model.ProteinPowder.ProteinPowderBrand</p>
    <p><strong>Weight in grams:</strong> @Model.ProteinPowder.Weight</p>
    <p><strong>Protein Type:</strong> @Model.ProteinPowder.TypeOfProtein</p>
    <p><strong>Availabe Protein Powder Flavors:</strong></p>

    <form id="form" asp-controller="ShoppingCart" asp-action="AddProteinToCart" method="post">
        <select class="form-control mb-2" id="proteinFlavors" required>
            <option value="" selected>Please select protein flavor</option>

            @foreach (var proteinPowderFlavor in Model.ProteinPowder.ProteinFlavors)
            {
                <option value="@proteinPowderFlavor.FlavorName">@proteinPowderFlavor.FlavorName</option>
            }
        </select>

        <input type="hidden" id="proteinFlavor" value="" />

        @if (isAuthenticated)
        {
            <button type="button" class="btn btn-primary mb-2" onclick="addToCart(@proteinId)">Add to cart</button>
        }
    </form>

    <p><strong>Ratings:</strong></p>
    @if (Model.ProteinPowder.Reviews != null && Model.ProteinPowder.Reviews.Any())
    {
        <ul>
            @foreach (var review in Model.ProteinPowder.Reviews)
            {
                <li>
                    <div class="comment-content" data-review-id="@review.Id" data-initial-comment="@review.Comment" data-initial-rating="@review.Rating">
                        <span>
                            Rating: <span class="rating">@review.Rating</span>,
                            @if (review.Comment != null)
                            {
                                <span>Comment: <span class="comment">@review.Comment,</span></span>
                            }
                            CreateAt: @review.CreatedAt, UserName: @review.UserName
                        </span>
                        @if (await UserService.IsThisUserPostThisReview(userId, review.Id, isUserAdmin))
                        {
                            <button class="edit-btn btn btn-primary mb-2">Edit</button>
                            <button class="btn btn-danger space delete-btn" data-review-id="@review.Id">Delete</button>
                        }
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No ratings yet.</p>
    }

    @if (!await ReviewService.IsUserAddReviewToProteinPowderAsync(userId, Model.ProteinPowder.Id) && isAuthenticated)
    {
        <form asp-controller="Review" asp-action="AddProteinPowderReview" method="post">
            <input type="hidden" name="proteinPowderId" value="@Model.ProteinPowder.Id" />

            <label asp-for="Review.Rating">Rating:</label>
            <select asp-for="Review.Rating" asp-items="new SelectList(new List<int> { 1, 2, 3, 4, 5 })" class="form-control" required>
                <option value="">Select Rating</option>
            </select>
            <span asp-validation-for="Review.Rating" class="text-danger"></span>

            <label asp-for="Review.Comment">Comment:</label>
            <textarea asp-for="Review.Comment" class="form-control mb-2"></textarea>
            <span asp-validation-for="Review.Comment" class="text-danger"></span>

            <input type="submit" value="Submit Rating" class="btn btn-primary mb-2" />
        </form>
    }
</div>

@if (isUserAdmin)
{
    <div class="d-flex align-items-center">
        <a asp-controller="ProteinPowder" asp-action="Edit" asp-route-id="@Model.ProteinPowder.Id" class="btn btn-warning">Edit</a>

        <button class="btn btn-danger space" onclick="deleteProteinPowder(`@Model.ProteinPowder.Id`, `@Model.ProteinPowder.Name`)">Delete</button>

        <a asp-controller="Flavor" asp-action="Add" asp-route-id="@Model.ProteinPowder.Id" class="btn btn-primary space">Add flavor</a>

        <a asp-controller="Flavor" asp-action="EditProteinFlavors" asp-route-proteinPowderId="@Model.ProteinPowder.Id" class="btn btn-primary space">Edit Flavors</a>
    </div>
}

@section scripts {
    <script>
        $(document).ready(function () {
            function setupEditForm(reviewContainer) {
                var reviewId = reviewContainer.data("review-id");
                var initialComment = reviewContainer.data("initial-comment");
                var initialRating = reviewContainer.data("initial-rating");

                var editForm = `
                                                            <form class="edit-form" data-review-id="${reviewId}">
                                                                <label>Edit Comment:</label>
                                                                <input type="text" class="form-control mb-2" value="${initialComment}" name="editedComment"/>
                                                                <label>Edit Rating:</label>
                                                                <select class="form-control mb-2" name="editedRating" required>
                                                                    <option value="1">1</option>
                                                                    <option value="2">2</option>
                                                                    <option value="3">3</option>
                                                                    <option value="4">4</option>
                                                                    <option value="5">5</option>
                                                                </select>
                                                                <button type="button" class="btn btn-primary save-btn">Save</button>
                                                            </form>`;

                var editFormContainer = $('<div>').html(editForm);
                reviewContainer.html('').append(editFormContainer);
                editFormContainer.find("[name='editedComment']").val(initialComment);
                editFormContainer.find("[name='editedRating']").val(initialRating);
            }

            // Delegate event listeners to document
            $(document).on("click", ".edit-btn", function () {
                var reviewContainer = $(this).closest(".comment-content");
                setupEditForm(reviewContainer);
            });

            $(document).on("click", ".save-btn", function () {
                var reviewContainer = $(this).closest(".comment-content");
                var reviewId = reviewContainer.data("review-id");
                var editedComment = reviewContainer.find("[name='editedComment']").val();
                var editedRating = reviewContainer.find("[name='editedRating']").val();

                reviewContainer.data("initial-comment", editedComment);
                reviewContainer.data("initial-rating", editedRating);

                $.ajax({
                    type: 'POST',
                    url: '/Review/EditReview',
                    data: { reviewId, editedComment, editedRating },
                    success: function (response) {
                        var formattedCreatedAt = new Date(response.createdAt).toLocaleDateString('en-US');
                        var editButton = `<button class="edit-btn btn btn-primary">Edit</button>`;
                        var deleteButton = `<button class="btn btn-danger space delete-btn" data-review-id="${reviewId}">Delete</button>`;
                        var updatedContent = `Rating: ${response.rating}, `;

                        if (response.comment === null) {
                            updatedContent += `CreatedAt: ${formattedCreatedAt}, User: ${response.userName} ${editButton} ${deleteButton}`;
                        } else {
                            updatedContent += `Comment: ${response.comment}, CreatedAt: ${formattedCreatedAt}, User: ${response.userName} ${editButton} ${deleteButton}`;
                        }

                        reviewContainer.find('.edit-form').remove();
                        reviewContainer.append(updatedContent);
                    },
                    error: function (error) {
                        console.error('Error updating comment:', error);
                    }
                });
            });

            $(document).on("click", ".delete-btn", function () {
                var reviewId = $(this).data("review-id");
                confirmDelete(reviewId);
            });

            function confirmDelete(reviewId) {
                const url = '/Review/DeleteReview';

                if (confirm('Are you sure you want to delete this review')) {
                    $.ajax({
                        url: url,
                        type: 'POST',
                        data: { reviewId },
                        success: function (result) {
                            location.reload();
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                }
            }
        });

        function setProteinFlavor() {
            // Get the selected value from the dropdown
            var selectedSize = document.getElementById('proteinFlavors').value;
            // Set the value of the hidden input field
            document.getElementById('proteinFlavor').value = selectedSize;
        }

        function addToCart(proteinId) {
            var form = document.getElementById('form');

            if (!form.checkValidity()) {
                form.reportValidity();
                return; // Stop further execution if validation fails
            }

            setProteinFlavor();
            var proteinFlavor = document.getElementById('proteinFlavor').value;

            $.ajax({
                url: '/ShoppingCart/AddProteinToCart',
                type: 'POST',
                data: { proteinId, proteinFlavor },
                success: function (response) {
                    window.location.reload(); // Reload the page after successful addition
                },
                error: function (error) {
                    alert("An error occurred while adding protein to the cart. Please try again later.");
                }
            });
        }
    </script>
}
